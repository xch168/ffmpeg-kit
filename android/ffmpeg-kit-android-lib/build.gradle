apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

android {
    if (project.android.hasProperty("namespace")) {
        namespace 'com.arthenica.ffmpegkit'
    }
    compileSdk 33
    ndkVersion "22.1.7171670"

    defaultConfig {
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "0.0.1"
        project.archivesBaseName = "ffmpeg-kit"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ["../libs"]
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            systemProperty 'enable.ffmpeg.kit.test.mode', 'true'
        }
    }

    lint {
        // 不因为警告而中止构建
        abortOnError false
        // 忽略测试源文件中的lint问题
        ignoreTestSources true
        // 只检查严重错误
        checkReleaseBuilds false
        // 创建baseline文件来跟踪现有的lint问题
        baseline = file("lint-baseline.xml")
    }

    publishing {
        singleVariant('release') {
            withJavadocJar()
            withSourcesJar()
        }
    }
}

task javadoc(type: Javadoc) {
    title = 'FFmpegKit'
    destinationDir = file("${projectDir}/../../docs/android/javadoc")
    
    // 配置源码目录
    source = android.sourceSets.main.java.srcDirs
    
    // 配置类路径
    doFirst {
        // 获取 Android bootClasspath
        def bootClasspath = android.bootClasspath
        if (bootClasspath && !bootClasspath.isEmpty()) {
            classpath += project.files(bootClasspath)
        }
        
        // 添加依赖项到类路径
        configurations.implementation.setCanBeResolved(true)
        classpath += configurations.implementation
    }
    
    // 配置 javadoc 选项
    options {
        encoding = 'UTF-8'
        charSet = 'UTF-8'
        author = true
        version = true
        use = true
        windowTitle = 'FFmpeg Kit Android API'
        docTitle = 'FFmpeg Kit Android API Documentation'
        links 'https://developer.android.com/reference/'
        
        // 忽略警告和错误以防止构建失败
        addStringOption('Xdoclint:none', '-quiet')
        addStringOption('tag', 'apiNote:a:API Note:')
        addStringOption('tag', 'implSpec:a:Implementation Requirements:')
        addStringOption('tag', 'implNote:a:Implementation Note:')
    }
    
    // 排除内部和测试类
    exclude '**/internal/**'
    exclude '**/test/**'
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
    
    // 确保在 Android 任务之后运行
    dependsOn 'assemble'
}

dependencies {
    api 'com.arthenica:smart-exception-java:0.2.1'
    testImplementation "androidx.test.ext:junit:1.1.5"
    testImplementation 'org.json:json:20230618'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId 'io.github.xch168'
                artifactId 'ffmpeg-kit-android'
                version project.version ?: "0.0.1"

                from components.release

                pom {
                    name = 'FFmpeg Kit Android'
                    description = 'FFmpeg Kit for Android. Supports Android API Level 24+.'
                    url = 'https://github.com/xch168/ffmpeg-kit'
                    
                    licenses {
                        license {
                            name = 'GNU LESSER GENERAL PUBLIC LICENSE, Version 3'
                            url = 'https://www.gnu.org/licenses/lgpl-3.0.en.html'
                            distribution = 'repo'
                        }
                    }
                    
                    developers {
                        developer {
                            id = 'xch168'
                            name = 'xch168'
                            email = 'kemp.xu@foxmail.com'
                        }
                    }
                    
                    scm {
                        connection = 'scm:git:https://github.com/xch168/ffmpeg-kit.git'
                        developerConnection = 'scm:git:https://github.com/xch168/ffmpeg-kit.git'
                        url = 'https://github.com/xch168/ffmpeg-kit'
                    }
                }
            }
        }
        
        repositories {
            maven {
                name = "central"
                def releasesRepoUrl = "https://central.sonatype.com/api/v1/publisher"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                
                credentials {
                    username System.getenv("MAVEN_CENTRAL_USERNAME") ?: project.findProperty("mavenCentralUsername")
                    password System.getenv("MAVEN_CENTRAL_PASSWORD") ?: project.findProperty("mavenCentralPassword")
                }
            }
        }
    }

    signing {
        required { gradle.taskGraph.hasTask("publish") }
        
        def signingKey = System.getenv("SIGNING_KEY") ?: project.findProperty("signingKey")
        def signingPassword = System.getenv("SIGNING_PASSWORD") ?: project.findProperty("signingPassword")
        
        if (signingKey && signingPassword) {
            useInMemoryPgpKeys(signingKey, signingPassword)
            sign publishing.publications.release
        }
    }
}
